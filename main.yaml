---
- name: Setup and deploy PHP Laravel application
  hosts: hng
  become: yes
  tasks:
    - name: Ensure the hng user exists
      ansible.builtin.user:
        name: hng
        state: present
        groups: sudo

    - name: Create /var/secrets directory
      ansible.builtin.file:
        path: /var/secrets
        state: directory
        owner: hng
        group: hng
        mode: '0700'

    - name: Add PHP repository
      ansible.builtin.apt_repository:
        repo: ppa:ondrej/php
        state: present

    - name: Install dependencies
      ansible.builtin.apt:
        name: "{{ item }}"
        state: present
      loop:
        - git
        - postgresql
        - postgresql-contrib
        - nginx
        - php8.2
        - php8.2-cli
        - php8.2-fpm
        - php8.2-pgsql
        - php8.2-mbstring
        - php8.2-xml
        - php8.2-curl
        - unzip
        - curl
        - python3-venv
   
    - name: Install PHP zip extension
      ansible.builtin.apt:
        name: php-zip
        state: present

    - name: Install PHP gd extension
      ansible.builtin.apt:
        name: php-gd
        state: present

    - name: Restart PHP-FPM service
      ansible.builtin.service:
        name: php8.2-fpm
        state: restarted

    - name: Check installed PHP extensions
      ansible.builtin.command: php -m
      register: php_modules

    - name: Debug PHP extensions
      ansible.builtin.debug:
        var: php_modules.stdout_lines
   
    - name: Create PHP CLI configuration directory if not exists
      ansible.builtin.file:
        path: /etc/php/8.2/cli/conf.d
        state: directory

    - name: Enable zip extension in PHP CLI
      ansible.builtin.copy:
        dest: /etc/php/8.2/cli/conf.d/20-zip.ini

        content: "extension=zip.so"

    - name: Enable gd extension in PHP CLI
      ansible.builtin.copy:
        dest: /etc/php/8.2/cli/conf.d/20-gd.ini
        content: "extension=gd.so"

    - name: Install psycopg2 dependencies
      ansible.builtin.apt:
        name:
          - python3-psycopg2
        state: present

    - name: Download Composer installer
      ansible.builtin.get_url:
        url: https://getcomposer.org/installer
        dest: /tmp/composer-setup.php

    - name: Install Composer
      ansible.builtin.command:
        cmd: php /tmp/composer-setup.php --install-dir=/usr/local/bin --filename=composer

    - name: Mark /opt/stage_5b as a safe directory for Git
      ansible.builtin.command:
        cmd: git config --global --add safe.directory /opt/stage_5b

    - name: Clone the repository
      ansible.builtin.git:
        repo: https://github.com/hngprojects/hng_boilerplate_php_laravel_web.git
        dest: /opt/stage_5b
        version: devops
        force: yes

    - name: Change ownership of the repository
      ansible.builtin.file:
        path: /opt/stage_5b
        state: directory
        owner: hng
        group: hng
        recurse: yes

    - name: Install PHP dependencies with Composer
      ansible.builtin.command:
        cmd: /usr/local/bin/composer install --ignore-platform-req=ext-zip --ignore-platform-req=ext-gd
        chdir: /opt/stage_5b
      environment:
        COMPOSER_ALLOW_SUPERUSER: "1"
        COMPOSER_NO_INTERACTION: "1"
      register: composer_install_output

    - name: Display Composer install output
      ansible.builtin.debug:
        var: composer_install_output.stdout_lines


    - name: Set up Laravel environment file
      ansible.builtin.copy:
        src: /opt/stage_5b/.env.example
        dest: /opt/stage_5b/.env
        remote_src: yes

    - name: Generate Laravel application key
      ansible.builtin.command:
        cmd: php artisan key:generate
      args:
        chdir: /opt/stage_5b
      register: artisan_key_generate_output

    - name: Display Artisan key generate output
      ansible.builtin.debug:
        var: artisan_key_generate_output

    - name: Install RabbitMQ
      ansible.builtin.apt:
        name: rabbitmq-server
        state: present

    - name: Enable and start RabbitMQ
      ansible.builtin.service:
        name: rabbitmq-server
        state: started
        enabled: yes
   
    - name: Create PostgreSQL database
      ansible.builtin.command:
        cmd: sudo -u postgres psql -c "CREATE DATABASE mydatabase;"

    - name: Create PostgreSQL user
      ansible.builtin.command:
        cmd: sudo -u postgres psql -c "CREATE USER pgadmin WITH PASSWORD 'mydbpassyword'; ALTER USER pgadmin WITH SUPERUSER;"

    - name: Save PostgreSQL admin credentials
      ansible.builtin.copy:
        content: |
          pgadmin:mydbpassyword
        dest: /var/secrets/pg_pw.txt
        owner: hng
        group: hng
        mode: '0600'


    - name: Configure application to run on port 3000
      ansible.builtin.copy:
        dest: /etc/systemd/system/laravel-app.service
        content: |
          [Unit]
          Description=Laravel Application
          After=network.target

          [Service]
          User=hng
          Group=hng
          WorkingDirectory=/opt/stage_5b
          ExecStart=/usr/bin/php artisan serve --host=127.0.0.1 --port=3000
          Restart=always

          [Install]
          WantedBy=multi-user.target
      notify:
        - Start Laravel service

    - name: Install Nginx 1.26
      ansible.builtin.apt:
        name: nginx
        state: present
        update_cache: yes

    - name: Configure Nginx
      ansible.builtin.copy:
        dest: /etc/nginx/sites-available/stage_5b
        content: |
          server {
              listen 80;
              server_name _;
              location / {
                  proxy_pass http://127.0.0.1:3000;
                  proxy_set_header Host $host;
                  proxy_set_header X-Real-IP $remote_addr;
                  proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                  proxy_set_header X-Forwarded-Proto $scheme;
              }
          }
      notify:
        - Restart nginx

    - name: Enable Nginx configuration
      ansible.builtin.file:
        src: /etc/nginx/sites-available/stage_5b
        dest: /etc/nginx/sites-enabled/stage_5b
        state: link

    - name: Remove default Nginx configuration
      ansible.builtin.file:
        path: /etc/nginx/sites-enabled/default
        state: absent
      notify:
        - Restart nginx

    - name: Set up logging directories
      ansible.builtin.file:
        path: /var/log/stage_5b
        state: directory
        owner: hng
        group: hng
        mode: '0755'

    - name: Configure application logging
      ansible.builtin.command: |
        touch /var/log/stage_5b/error.log /var/log/stage_5b/out.log
        chown hng:hng /var/log/stage_5b/error.log /var/log/stage_5b/out.log

  handlers:
    - name: Restart nginx
      ansible.builtin.service:
        name: nginx
        state: restarted

    - name: Start Laravel service
      ansible.builtin.service:
        name: laravel-app
        state: started
        enabled: yes
